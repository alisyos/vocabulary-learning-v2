
> vocabulary-learning-app@0.1.0 dev
> next dev

 ⚠ Warning: Found multiple lockfiles. Selecting /mnt/d/test/package-lock.json.
   Consider removing the lockfiles at:
   * /mnt/d/test/vocabulary_learning2/vocabulary-learning-app/package-lock.json

   ▲ Next.js 15.4.1
   - Local:        http://localhost:3000
   - Network:      http://172.27.165.220:3000
   - Environments: .env.local

 ✓ Starting...
 ✓ Ready in 19.4s
 ○ Compiling /api/get-curriculum-structure ...
 ✓ Compiled /api/get-curriculum-structure in 4s (380 modules)
Supabase에서 교육과정 구조 데이터를 가져오는 중...
Supabase에서 624개의 교육과정 데이터를 가져왔습니다.
 GET /api/get-curriculum-structure 200 in 5738ms
Supabase에서 교육과정 구조 데이터를 가져오는 중...
Supabase에서 624개의 교육과정 데이터를 가져왔습니다.
 GET /api/get-curriculum-structure 200 in 206ms
 ○ Compiling /api/generate-passage ...
 ✓ Compiled /api/generate-passage in 1101ms (481 modules)
🔍 Starting prompt DB queries...
📊 Division prompt: FROM DB (180 chars)
Supabase 프롬프트 조회 실패, 기본값 사용: {
  code: 'PGRST116',
  details: 'The result contains 0 rows',
  hint: null,
  message: 'JSON object requested, multiple (or no) rows returned'
}
📏 Length prompt: FROM DB (132 chars)
Supabase 프롬프트 조회 실패, 기본값 사용: {
  code: 'PGRST116',
  details: 'The result contains 0 rows',
  hint: null,
  message: 'JSON object requested, multiple (or no) rows returned'
}
📋 Output format prompt: FALLBACK TO HARDCODED
🧬 Area prompt: FROM DB (123 chars)
📚 Subject prompt: FROM DB (103 chars)
✅ All prompt DB queries completed
Supabase 프롬프트 조회 실패, 기본값 사용: {
  code: 'PGRST116',
  details: 'The result contains 0 rows',
  hint: null,
  message: 'JSON object requested, multiple (or no) rows returned'
}
🔍 Text type lookup: passage/textType/논설문
📄 Text type prompt found: YES (115 chars)
Generated prompt: ###지시사항
다음 입력값을 받아 학습 지문(passage)을 생성하십시오. 출력은 하나의 영역으로 구분합니다.
- passage: 입력 조건을 반영해 생성한 지문

모든 지문은 질문형·호기심 유발형 제목을 사용하고, 실생활 예시를 활용해 추상 개념을 설명해야 하며, 임의(random) 로직은 사용하지 않습니다.

###작성절차
1. 키워드 도출
- 구분·과목·학년·영역·지문 길이를 파싱하여 ① 핵심 개념(기초→심화), ② 생활 연계 예시, ③ 학년별 어휘 수준을 도출합니다.
2. 지문(passages) 생성
- 도출한 가이드를 조합해 제목 1개와 본문을 작성합니다.
- 본문은 입력된 지문 길이 가이드라인과 출력 형식 규칙을 정확히 준수합니다.
- **용어 설명 필수 요구사항**: 지문에 등장하는 모든 학습 관련 용어들을 footnote에 포함시켜야 합니다. 최소 20개 이상의 용어를 추출하여 설명하세요.
  * 핵심 개념어와 관련 용어들
  * 지문에 직접 언급된 전문 용어들
  * 학년 수준에 맞는 중요한 어휘들
  * 관련 배경 지식이 필요한 용어들
  * 생활 속에서 사용되는 관련 용어들도 포함
- **용어 설명 형식**: 각 용어에 대해 "용어: 설명 (예시: 예시문장)" 형태로 작성하세요.
  * 설명: 학년 수준에 맞는 간단하고 명확한 설명
  * 예시문장: 해당 용어가 실제로 사용되는 자연스러운 문장
3. 흥미 요소 적용
- 도입부에 실생활 상황·질문을 배치하여 독자의 호기심을 자극합니다.
- 단순 설명문뿐 아니라 비교·예측·원인결과 등 다양한 서술 방식을 활용합니다.
4. 출력 생성
- 아래 [공통 출력 스키마] 형식을 준수한 JSON만 출력하십시오.
- 지정된 키가 없거나 데이터를 찾을 수 없으면 **"-"**로 표기합니다.
- **footnote는 반드시 20개 이상의 용어 설명을 포함해야 하며, 각 용어는 설명과 예시문장을 모두 포함해야 합니다.**

###구분
[초등학교 중학년(3-4학년)]: 학습자는 짧은 문장 구조와 익숙한 단어를 중심으로 이해할 수 있습니다. 설명은 구체적인 사례와 생활 속 경험에 기반해야 하며, 새로운 개념어에는 간단한 풀이가 필요합니다. 추상적인 개념은 "왜 그럴까?", "무엇이 다를까?"와 같은 질문으로 흥미를 유도하고, 그림을 그리듯 서술해 주세요.

###지문 길이
4-5문장으로 구성한 5-6개 단락: 각 단락은 4-5문장으로 구성하여 하나의 소주제를 완성도 있게 설명합니다. 총 5-6개 단락으로 전체 내용을 균형 있게 전개하세요. 초등 중학년 수준에 맞는 친근하고 이해하기 쉬운 구성을 유지하세요.

###과목
[과학]: 자연 현상의 원리와 법칙을 탐구하는 과목입니다. 관찰, 실험, 추론을 통해 과학적 사고력을 기릅니다. 물리, 화학, 생물, 지구과학의 기초 개념을 학년 수준에 맞게 다룹니다.

###학년
중3

###영역
[생명] 식물과 동물의 구조와 기능, 생명의 특성, 성장과 번식, 감각기관, 생태계 구성과 상호작용을 설명합니다. 초등은 친숙한 생물체를 중심으로 관찰 기반으로 설명하고, 중학생은 정밀한 생명 현상을 구조적으로 다룹니다.

###대주제
생식과 발생
위 대주제를 중심으로 생명 영역의 학습 내용과 연결하여 지문을 구성하세요.

###소주제
생식과 유전
이 소주제를 구체적으로 다루며, 대주제와의 연관성을 명확히 하여 지문을 작성하세요.

###핵심 개념어
염색체/유전자/감수분열/유전정보/형질
이 핵심 개념어들을 지문에 자연스럽게 포함시키고, 학년 수준에 맞게 설명하세요. footnote에는 이 용어들을 포함하여 최소 20개 이상의 관련 용어 해설을 추가하세요.

###글의 유형
논설문: 특정 주제에 대한 의견이나 주장을 논리적으로 전개하는 글입니다. 문제 제기-근거 제시-반박-결론의 구조를 가지며, 설득력 있는 근거와 사례를 활용합니다. 학년 수준에 맞는 논리적 사고를 유도하세요.

###출력형식(JSON)
{
  "passages": [
    {
      "title": "<질문형·흥미유발형 제목>",
      "paragraphs": [
        "<4-5문장으로 구성한 단락1>",
        "<4-5문장으로 구성한 단락2>",
        "<4-5문장으로 구성한 단락3>",
        "<4-5문장으로 구성한 단락4>",
        "<4-5문장으로 구성한 단락5>",
        "<4-5문장으로 구성한 단락6(생략가능)>"
      ],
      "footnote": [
        "용어1: 간단하고 명확한 설명 (예시: 용어1을 사용한 자연스러운 예시문장)",
        "용어2: 간단하고 명확한 설명 (예시: 용어2를 사용한 자연스러운 예시문장)",
        "용어3: 간단하고 명확한 설명 (예시: 용어3을 사용한 자연스러운 예시문장)",
        "용어4: 간단하고 명확한 설명 (예시: 용어4를 사용한 자연스러운 예시문장)",
        "용어5: 간단하고 명확한 설명 (예시: 용어5를 사용한 자연스러운 예시문장)",
        "용어6: 간단하고 명확한 설명 (예시: 용어6을 사용한 자연스러운 예시문장)",
        "용어7: 간단하고 명확한 설명 (예시: 용어7을 사용한 자연스러운 예시문장)",
        "용어8: 간단하고 명확한 설명 (예시: 용어8을 사용한 자연스러운 예시문장)",
        "용어9: 간단하고 명확한 설명 (예시: 용어9를 사용한 자연스러운 예시문장)",
        "용어10: 간단하고 명확한 설명 (예시: 용어10을 사용한 자연스러운 예시문장)",
        "용어11: 간단하고 명확한 설명 (예시: 용어11을 사용한 자연스러운 예시문장)",
        "용어12: 간단하고 명확한 설명 (예시: 용어12를 사용한 자연스러운 예시문장)",
        "용어13: 간단하고 명확한 설명 (예시: 용어13을 사용한 자연스러운 예시문장)",
        "용어14: 간단하고 명확한 설명 (예시: 용어14를 사용한 자연스러운 예시문장)",
        "용어15: 간단하고 명확한 설명 (예시: 용어15를 사용한 자연스러운 예시문장)",
        "용어16: 간단하고 명확한 설명 (예시: 용어16을 사용한 자연스러운 예시문장)",
        "용어17: 간단하고 명확한 설명 (예시: 용어17을 사용한 자연스러운 예시문장)",
        "용어18: 간단하고 명확한 설명 (예시: 용어18을 사용한 자연스러운 예시문장)",
        "용어19: 간단하고 명확한 설명 (예시: 용어19를 사용한 자연스러운 예시문장)",
        "용어20: 간단하고 명확한 설명 (예시: 용어20을 사용한 자연스러운 예시문장)",
        "추가용어21: 간단하고 명확한 설명 (예시: 추가용어21을 사용한 자연스러운 예시문장)",
        "추가용어22: 간단하고 명확한 설명 (예시: 추가용어22를 사용한 자연스러운 예시문장)",
        "추가용어23: 간단하고 명확한 설명 (예시: 추가용어23을 사용한 자연스러운 예시문장)",
        "추가용어24: 간단하고 명확한 설명 (예시: 추가용어24를 사용한 자연스러운 예시문장)",
        "추가용어25: 간단하고 명확한 설명 (예시: 추가용어25를 사용한 자연스러운 예시문장)"
      ]
    }
  ]
}
GPT response: {
  passages: [
    {
      title: '우리는 왜 부모님과 닮았을까?—생식과 유전의 비밀을 찾아서',
      paragraphs: [Array],
      footnote: [Array]
    }
  ]
}
 POST /api/generate-passage 200 in 25659ms
 ○ Compiling / ...


Retrying 1/3...


Retrying 1/3...
 ✓ Compiled / in 7.3s (659 modules)
 GET / 200 in 10363ms
 ✓ Compiled /api/auth/session in 481ms (646 modules)
 GET /api/auth/session 200 in 981ms
 ✓ Compiled /api/get-curriculum-structure in 278ms (507 modules)
Supabase에서 교육과정 구조 데이터를 가져오는 중...
Supabase에서 624개의 교육과정 데이터를 가져왔습니다.
 GET /api/get-curriculum-structure 200 in 4290ms
Supabase에서 교육과정 구조 데이터를 가져오는 중...
Supabase에서 624개의 교육과정 데이터를 가져왔습니다.
 GET /api/get-curriculum-structure 200 in 173ms
 GET / 200 in 415ms
 ✓ Compiled /favicon.ico in 414ms (509 modules)
 GET /favicon.ico 200 in 897ms
 GET /api/auth/session 200 in 890ms
Supabase에서 교육과정 구조 데이터를 가져오는 중...
Supabase에서 624개의 교육과정 데이터를 가져왔습니다.
 GET /api/get-curriculum-structure 200 in 647ms
Supabase에서 교육과정 구조 데이터를 가져오는 중...
Supabase에서 624개의 교육과정 데이터를 가져왔습니다.
 GET /api/get-curriculum-structure 200 in 173ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 799ms (632 modules)
 GET /api/debug-db-keys 404 in 1312ms
 GET /api/debug-db-keys 404 in 87ms
